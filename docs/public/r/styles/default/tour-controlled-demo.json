{
  "name": "tour-controlled-demo",
  "type": "registry:example",
  "dependencies": [
    "@radix-ui/react-slot",
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "tour"
  ],
  "files": [
    {
      "path": "examples/tour-controlled-demo.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Tour,\n  TourClose,\n  TourDescription,\n  TourFooter,\n  TourHeader,\n  TourNext,\n  TourOverlay,\n  TourPrev,\n  TourSkip,\n  TourStep,\n  TourStepCounter,\n  TourTitle,\n} from \"@/registry/default/ui/tour\";\n\nexport default function TourControlledDemo() {\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState(0);\n\n  const onStepChange = React.useCallback((step: number) => {\n    setValue(step);\n    console.log(`Step changed to: ${step + 1}`);\n  }, []);\n\n  const onComplete = React.useCallback(() => {\n    console.log(\"Tour completed!\");\n    setOpen(false);\n    setValue(0);\n  }, []);\n\n  const onSkip = React.useCallback(() => {\n    console.log(\"Tour skipped!\");\n    setOpen(false);\n    setValue(0);\n  }, []);\n\n  const onTourStart = React.useCallback(() => {\n    setValue(0);\n    setOpen(true);\n  }, []);\n\n  return (\n    <div className=\"flex min-h-[400px] flex-col items-center justify-center gap-8 p-8\">\n      <div className=\"flex flex-col items-center gap-4\">\n        <h1 id=\"controlled-title\" className=\"font-bold text-2xl\">\n          Controlled Tour Example\n        </h1>\n        <p className=\"text-center text-muted-foreground\">\n          This tour demonstrates controlled state management with external step\n          tracking.\n        </p>\n        <div className=\"flex gap-2\">\n          <Button id=\"controlled-start-btn\" onClick={onTourStart}>\n            Start Controlled Tour\n          </Button>\n          <Button\n            variant=\"outline\"\n            onClick={() => setValue(Math.max(0, value - 1))}\n            disabled={!open || value === 0}\n          >\n            External Prev\n          </Button>\n          <Button\n            variant=\"outline\"\n            onClick={() => setValue(Math.min(2, value + 1))}\n            disabled={!open || value === 2}\n          >\n            External Next\n          </Button>\n        </div>\n        {open && (\n          <p className=\"text-muted-foreground text-sm\">\n            Current step: {value + 1} / 3\n          </p>\n        )}\n      </div>\n      <div className=\"grid grid-cols-2 gap-6\">\n        <div\n          id=\"controlled-step-1\"\n          className=\"rounded-lg border p-6 text-center\"\n        >\n          <h3 className=\"font-semibold\">Step 1</h3>\n          <p className=\"text-muted-foreground text-sm\">\n            First step in our controlled tour\n          </p>\n        </div>\n        <div\n          id=\"controlled-step-2\"\n          className=\"rounded-lg border p-6 text-center\"\n        >\n          <h3 className=\"font-semibold\">Step 2</h3>\n          <p className=\"text-muted-foreground text-sm\">\n            Second step with external controls\n          </p>\n        </div>\n      </div>\n      <Tour\n        open={open}\n        onOpenChange={setOpen}\n        value={value}\n        onValueChange={onStepChange}\n        onComplete={onComplete}\n        onSkip={onSkip}\n      >\n        <TourOverlay />\n        <TourStep target=\"#controlled-title\" placement=\"bottom\">\n          <TourHeader>\n            <TourTitle>Controlled Tour</TourTitle>\n            <TourDescription>\n              This tour's state is controlled externally. Notice how the step\n              counter updates.\n            </TourDescription>\n          </TourHeader>\n          <TourFooter>\n            <div className=\"flex w-full items-center justify-between\">\n              <TourStepCounter />\n              <div className=\"flex gap-2\">\n                <TourSkip />\n                <TourNext />\n              </div>\n            </div>\n          </TourFooter>\n          <TourClose />\n        </TourStep>\n        <TourStep target=\"#controlled-step-1\" placement=\"top\">\n          <TourHeader>\n            <TourTitle>External Controls</TourTitle>\n            <TourDescription>\n              You can control this tour using the external buttons above, or use\n              the built-in navigation.\n            </TourDescription>\n          </TourHeader>\n          <TourFooter>\n            <div className=\"flex w-full items-center justify-between\">\n              <TourStepCounter />\n              <div className=\"flex gap-2\">\n                <TourPrev />\n                <TourNext />\n              </div>\n            </div>\n          </TourFooter>\n          <TourClose />\n        </TourStep>\n        <TourStep target=\"#controlled-step-2\" placement=\"top\">\n          <TourHeader>\n            <TourTitle>Final Step</TourTitle>\n            <TourDescription>\n              This is the last step. The tour state is fully controlled by the\n              parent component.\n            </TourDescription>\n          </TourHeader>\n          <TourFooter>\n            <div className=\"flex w-full items-center justify-between\">\n              <TourStepCounter />\n              <div className=\"flex gap-2\">\n                <TourPrev />\n                <TourNext />\n              </div>\n            </div>\n          </TourFooter>\n          <TourClose />\n        </TourStep>\n      </Tour>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}