{
  "name": "qr-code-interactive-demo",
  "type": "registry:example",
  "registryDependencies": [
    "qr-code",
    "button",
    "input",
    "label",
    "select"
  ],
  "files": [
    {
      "path": "examples/qr-code-interactive-demo.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  QRCode,\n  QRCodeCanvas,\n  QRCodeDownload,\n  type QRCodeProps,\n} from \"@/registry/default/ui/qr-code\";\n\nexport default function QRCodeInteractiveDemo() {\n  const [value, setValue] = React.useState(\"https://diceui.com\");\n  const [size, setSize] = React.useState(200);\n  const [foregroundColor, setForegroundColor] = React.useState(\"#000000\");\n  const [backgroundColor, setBackgroundColor] = React.useState(\"#ffffff\");\n  const [level, setLevel] = React.useState<\"L\" | \"M\" | \"Q\" | \"H\">(\"M\");\n\n  return (\n    <div className=\"flex flex-col gap-6 p-6\">\n      <div className=\"grid grid-cols-1 gap-8 lg:grid-cols-2\">\n        <div className=\"flex flex-col gap-4\">\n          <h3 className=\"font-semibold text-lg\">Customize QR Code</h3>\n\n          <div className=\"flex flex-col gap-2\">\n            <Label htmlFor=\"qr-value\">Content</Label>\n            <Input\n              id=\"qr-value\"\n              value={value}\n              onChange={(event) => setValue(event.target.value)}\n              placeholder=\"Enter text or URL\"\n            />\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"flex flex-col gap-2\">\n              <Label htmlFor=\"qr-size\">Size</Label>\n              <Input\n                id=\"qr-size\"\n                type=\"number\"\n                min=\"100\"\n                max=\"400\"\n                value={size}\n                onChange={(event) => setSize(Number(event.target.value))}\n              />\n            </div>\n\n            <div className=\"flex flex-col gap-2\">\n              <Label htmlFor=\"qr-level\">Error Correction</Label>\n              <Select\n                value={level}\n                onValueChange={(value: NonNullable<QRCodeProps[\"level\"]>) =>\n                  setLevel(value)\n                }\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"L\">Low (~7%)</SelectItem>\n                  <SelectItem value=\"M\">Medium (~15%)</SelectItem>\n                  <SelectItem value=\"Q\">Quartile (~25%)</SelectItem>\n                  <SelectItem value=\"H\">High (~30%)</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"flex flex-col gap-2\">\n              <Label htmlFor=\"fg-color\">Foreground Color</Label>\n              <div className=\"flex items-center gap-2\">\n                <Input\n                  id=\"fg-color\"\n                  type=\"color\"\n                  value={foregroundColor}\n                  onChange={(event) => setForegroundColor(event.target.value)}\n                  className=\"h-10 w-16\"\n                />\n                <Input\n                  value={foregroundColor}\n                  onChange={(event) => setForegroundColor(event.target.value)}\n                  className=\"flex-1\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex flex-col gap-2\">\n              <Label htmlFor=\"bg-color\">Background Color</Label>\n              <div className=\"flex items-center gap-2\">\n                <Input\n                  id=\"bg-color\"\n                  type=\"color\"\n                  value={backgroundColor}\n                  onChange={(event) => setBackgroundColor(event.target.value)}\n                  className=\"h-10 w-16\"\n                />\n                <Input\n                  value={backgroundColor}\n                  onChange={(event) => setBackgroundColor(event.target.value)}\n                  className=\"flex-1\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            <QRCode\n              value={value}\n              size={size}\n              foregroundColor={foregroundColor}\n              backgroundColor={backgroundColor}\n              level={level}\n            >\n              <QRCodeDownload format=\"png\" filename=\"custom-qr\">\n                <Button variant=\"outline\" size=\"sm\">\n                  Download PNG\n                </Button>\n              </QRCodeDownload>\n            </QRCode>\n            <QRCode\n              value={value}\n              size={size}\n              foregroundColor={foregroundColor}\n              backgroundColor={backgroundColor}\n              level={level}\n            >\n              <QRCodeDownload format=\"svg\" filename=\"custom-qr\">\n                <Button variant=\"outline\" size=\"sm\">\n                  Download SVG\n                </Button>\n              </QRCodeDownload>\n            </QRCode>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col items-center gap-4\">\n          <h3 className=\"font-semibold text-lg\">Preview</h3>\n          <div className=\"rounded-lg border bg-muted/20 p-4\">\n            <QRCode\n              value={value}\n              size={size}\n              foregroundColor={foregroundColor}\n              backgroundColor={backgroundColor}\n              level={level}\n            >\n              <QRCodeCanvas />\n            </QRCode>\n          </div>\n          <p className=\"text-center text-muted-foreground text-sm\">{value}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}