{
  "name": "stepper-controlled-demo",
  "type": "registry:example",
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "examples/stepper-controlled-demo.tsx",
      "content": "import * as React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Stepper,\n  StepperContent,\n  StepperDescription,\n  StepperIndicator,\n  StepperItem,\n  StepperList,\n  StepperSeparator,\n  StepperTitle,\n  StepperTrigger,\n} from \"@/registry/default/ui/stepper\";\n\nconst steps = [\n  {\n    value: \"personal\",\n    title: \"Personal Info\",\n    description: \"Enter your personal details\",\n  },\n  {\n    value: \"preferences\",\n    title: \"Preferences\",\n    description: \"Set your account preferences\",\n  },\n  {\n    value: \"confirmation\",\n    title: \"Confirmation\",\n    description: \"Review and confirm your settings\",\n  },\n];\n\nexport default function StepperControlledDemo() {\n  const [currentStep, setCurrentStep] = React.useState(\"personal\");\n\n  const currentIndex = React.useMemo(\n    () => steps.findIndex((step) => step.value === currentStep),\n    [currentStep],\n  );\n\n  const nextStep = React.useCallback(() => {\n    const nextIndex = Math.min(currentIndex + 1, steps.length - 1);\n    setCurrentStep(steps[nextIndex]?.value ?? \"\");\n  }, [currentIndex]);\n\n  const prevStep = React.useCallback(() => {\n    const prevIndex = Math.max(currentIndex - 1, 0);\n    setCurrentStep(steps[prevIndex]?.value ?? \"\");\n  }, [currentIndex]);\n\n  const goToStep = React.useCallback((stepValue: string) => {\n    setCurrentStep(stepValue);\n  }, []);\n\n  return (\n    <Stepper value={currentStep} onValueChange={goToStep}>\n      <StepperList>\n        {steps.map((step, index) => (\n          <StepperItem key={step.value} value={step.value}>\n            <StepperTrigger>\n              <StepperIndicator>{index + 1}</StepperIndicator>\n            </StepperTrigger>\n            <div className=\"mt-2 flex flex-col items-center gap-1\">\n              <StepperTitle>{step.title}</StepperTitle>\n              <StepperDescription>{step.description}</StepperDescription>\n            </div>\n            <StepperSeparator />\n          </StepperItem>\n        ))}\n      </StepperList>\n      {steps.map((step) => (\n        <StepperContent key={step.value} value={step.value}>\n          <div className=\"rounded-lg border p-6\">\n            <h3 className=\"mb-2 font-semibold text-lg\">{step.title}</h3>\n            <p className=\"mb-4 text-muted-foreground\">{step.description}</p>\n            <p className=\"mb-6 text-sm\">\n              This is the content for {step.title}. You can add forms,\n              information, or any other content here.\n            </p>\n            <div className=\"flex justify-between\">\n              <Button\n                variant=\"outline\"\n                onClick={prevStep}\n                disabled={currentIndex === 0}\n              >\n                Previous\n              </Button>\n              <div className=\"text-muted-foreground text-sm\">\n                Step {currentIndex + 1} of {steps.length}\n              </div>\n              <Button\n                onClick={nextStep}\n                disabled={currentIndex === steps.length - 1}\n              >\n                {currentIndex === steps.length - 1 ? \"Complete\" : \"Next\"}\n              </Button>\n            </div>\n          </div>\n        </StepperContent>\n      ))}\n    </Stepper>\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}