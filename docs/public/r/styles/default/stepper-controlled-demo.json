{
  "name": "stepper-controlled-demo",
  "type": "registry:example",
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "examples/stepper-controlled-demo.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Stepper,\r\n  StepperContent,\r\n  StepperDescription,\r\n  StepperIndicator,\r\n  StepperItem,\r\n  StepperList,\r\n  StepperSeparator,\r\n  StepperTitle,\r\n  StepperTrigger,\r\n} from \"@/registry/default/ui/stepper\";\r\n\r\nconst steps = [\r\n  {\r\n    value: \"personal\",\r\n    title: \"Personal Info\",\r\n    description: \"Enter your personal details\",\r\n  },\r\n  {\r\n    value: \"preferences\",\r\n    title: \"Preferences\",\r\n    description: \"Set your account preferences\",\r\n  },\r\n  {\r\n    value: \"confirmation\",\r\n    title: \"Confirmation\",\r\n    description: \"Review and confirm your settings\",\r\n  },\r\n];\r\n\r\nexport default function StepperControlledDemo() {\r\n  const [currentStep, setCurrentStep] = React.useState(\"personal\");\r\n\r\n  const currentIndex = React.useMemo(\r\n    () => steps.findIndex((step) => step.value === currentStep),\r\n    [currentStep],\r\n  );\r\n\r\n  const nextStep = React.useCallback(() => {\r\n    const nextIndex = Math.min(currentIndex + 1, steps.length - 1);\r\n    setCurrentStep(steps[nextIndex]?.value ?? \"\");\r\n  }, [currentIndex]);\r\n\r\n  const prevStep = React.useCallback(() => {\r\n    const prevIndex = Math.max(currentIndex - 1, 0);\r\n    setCurrentStep(steps[prevIndex]?.value ?? \"\");\r\n  }, [currentIndex]);\r\n\r\n  const goToStep = React.useCallback((stepValue: string) => {\r\n    setCurrentStep(stepValue);\r\n  }, []);\r\n\r\n  return (\r\n    <Stepper value={currentStep} onValueChange={goToStep}>\r\n      <StepperList>\r\n        {steps.map((step) => (\r\n          <StepperItem key={step.value} value={step.value} className=\"gap-4\">\r\n            <StepperTrigger>\r\n              <StepperIndicator />\r\n              <div className=\"flex flex-col gap-1\">\r\n                <StepperTitle>{step.title}</StepperTitle>\r\n                <StepperDescription>{step.description}</StepperDescription>\r\n              </div>\r\n            </StepperTrigger>\r\n            <StepperSeparator className=\"mx-4\" />\r\n          </StepperItem>\r\n        ))}\r\n      </StepperList>\r\n      {steps.map((step) => (\r\n        <StepperContent\r\n          key={step.value}\r\n          value={step.value}\r\n          className=\"flex flex-col gap-4 rounded-md border bg-card p-4 text-card-foreground\"\r\n        >\r\n          <div className=\"flex flex-col gap-px\">\r\n            <h3 className=\"font-semibold text-lg\">{step.title}</h3>\r\n            <p className=\"text-muted-foreground\">{step.description}</p>\r\n          </div>\r\n          <p className=\"text-sm\">\r\n            This is the content for {step.title}. You can add forms,\r\n            information, or any other content here.\r\n          </p>\r\n          <div className=\"flex justify-between\">\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={prevStep}\r\n              disabled={currentIndex === 0}\r\n            >\r\n              Previous\r\n            </Button>\r\n            <div className=\"text-muted-foreground text-sm\">\r\n              Step {currentIndex + 1} of {steps.length}\r\n            </div>\r\n            <Button\r\n              onClick={nextStep}\r\n              disabled={currentIndex === steps.length - 1}\r\n            >\r\n              {currentIndex === steps.length - 1 ? \"Complete\" : \"Next\"}\r\n            </Button>\r\n          </div>\r\n        </StepperContent>\r\n      ))}\r\n    </Stepper>\r\n  );\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}