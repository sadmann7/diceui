{
  "name": "file-upload-validation-demo",
  "type": "registry:example",
  "dependencies": [
    "@radix-ui/react-slot",
    "lucide-react"
  ],
  "registryDependencies": [
    "file-upload",
    "button"
  ],
  "files": [
    {
      "path": "examples/file-upload-validation-demo.tsx",
      "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  FileUpload,\n  FileUploadDropzone,\n  FileUploadItem,\n  FileUploadItemDelete,\n  FileUploadItemMetadata,\n  FileUploadItemPreview,\n  FileUploadItemProgress,\n  FileUploadList,\n  FileUploadTrigger,\n} from \"@/registry/default/ui/file-upload\";\nimport { CloudUploadIcon, TrashIcon, UploadIcon, X } from \"lucide-react\";\nimport * as React from \"react\";\nimport { toast } from \"sonner\";\n\nexport default function FileUploadValidationDemo() {\n  const [files, setFiles] = React.useState<File[]>([]);\n\n  const onFileValidate = React.useCallback((file: File): string | undefined => {\n    // Validate file type (only images)\n    if (!file.type.startsWith(\"image/\")) {\n      return \"Only image files are allowed\";\n    }\n\n    // Validate file size (max 2MB)\n    const MAX_SIZE = 2 * 1024 * 1024; // 2MB\n    if (file.size > MAX_SIZE) {\n      return `File size must be less than ${MAX_SIZE / (1024 * 1024)}MB`;\n    }\n\n    return undefined;\n  }, []);\n\n  const onFileReject = React.useCallback((file: File, message: string) => {\n    toast(message, {\n      description: `\"${file.name.length > 20 ? `${file.name.slice(0, 20)}...` : file.name}\" has been rejected`,\n    });\n  }, []);\n\n  return (\n    <div className=\"w-full max-w-xl\">\n      <FileUpload\n        value={files}\n        onValueChange={setFiles}\n        onFileValidate={onFileValidate}\n        onFileReject={onFileReject}\n        accept=\"image/*\"\n        maxSize={2 * 1024 * 1024} // 2MB\n        maxFiles={5}\n        className=\"w-full\"\n        multiple\n      >\n        <FileUploadDropzone className=\"flex flex-col items-center justify-center gap-4 rounded-lg border border-border border-dashed p-10\">\n          <div className=\"flex flex-col items-center justify-center gap-2 text-center\">\n            <CloudUploadIcon className=\"h-10 w-10 text-muted-foreground\" />\n            <div className=\"flex flex-col space-y-1\">\n              <p className=\"font-medium text-sm\">Drop images here</p>\n              <p className=\"text-muted-foreground text-xs\">\n                Only images less than 2MB (max 5 files)\n              </p>\n            </div>\n          </div>\n          <FileUploadTrigger asChild>\n            <Button variant=\"ghost\" size=\"icon\" className=\"size-7\">\n              <UploadIcon />\n              Select images\n            </Button>\n          </FileUploadTrigger>\n        </FileUploadDropzone>\n        <FileUploadList className=\"mt-4 space-y-2\">\n          {files.map((file) => (\n            <FileUploadItem\n              key={file.name}\n              value={file}\n              className=\"flex items-center rounded-lg border p-2\"\n            >\n              <FileUploadItemPreview />\n              <FileUploadItemMetadata />\n              <FileUploadItemDelete asChild>\n                <Button variant=\"ghost\" size=\"icon\" className=\"size-7\">\n                  <X />\n                </Button>\n              </FileUploadItemDelete>\n            </FileUploadItem>\n          ))}\n        </FileUploadList>\n      </FileUpload>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}