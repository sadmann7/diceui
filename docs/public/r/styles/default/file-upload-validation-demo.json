{
  "name": "file-upload-validation-demo",
  "type": "registry:example",
  "dependencies": [
    "@radix-ui/react-slot",
    "lucide-react"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "examples/file-upload-validation-demo.tsx",
      "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  FileUpload,\n  FileUploadDropzone,\n  FileUploadItem,\n  FileUploadItemDelete,\n  FileUploadItemMetadata,\n  FileUploadItemPreview,\n  FileUploadList,\n  FileUploadTrigger,\n} from \"@/registry/default/ui/file-upload\";\nimport { Upload, X } from \"lucide-react\";\nimport * as React from \"react\";\nimport { toast } from \"sonner\";\n\nexport default function FileUploadValidationDemo() {\n  const [files, setFiles] = React.useState<File[]>([]);\n\n  const onFileValidate = React.useCallback(\n    (file: File): string | null => {\n      // Validate max files\n      if (files.length >= 2) {\n        return \"You can only upload up to 2 files\";\n      }\n\n      // Validate file type (only images)\n      if (!file.type.startsWith(\"image/\")) {\n        return \"Only image files are allowed\";\n      }\n\n      // Validate file size (max 2MB)\n      const MAX_SIZE = 2 * 1024 * 1024; // 2MB\n      if (file.size > MAX_SIZE) {\n        return `File size must be less than ${MAX_SIZE / (1024 * 1024)}MB`;\n      }\n\n      return null;\n    },\n    [files],\n  );\n\n  const onFileReject = React.useCallback((file: File, message: string) => {\n    toast(message, {\n      description: `\"${file.name.length > 20 ? `${file.name.slice(0, 20)}...` : file.name}\" has been rejected`,\n    });\n  }, []);\n\n  return (\n    <FileUpload\n      value={files}\n      onValueChange={setFiles}\n      onFileValidate={onFileValidate}\n      onFileReject={onFileReject}\n      accept=\"image/*\"\n      maxFiles={2}\n      className=\"w-full max-w-md\"\n      multiple\n    >\n      <FileUploadDropzone>\n        <div className=\"flex flex-col items-center gap-1\">\n          <div className=\"flex items-center justify-center rounded-full border p-2.5\">\n            <Upload className=\"size-6 text-muted-foreground\" />\n          </div>\n          <p className=\"font-medium text-sm\">Drag & drop files here</p>\n          <p className=\"text-muted-foreground text-xs\">\n            Or click to browse (max 2 files)\n          </p>\n        </div>\n        <FileUploadTrigger asChild>\n          <Button variant=\"outline\" size=\"sm\" className=\"mt-2 w-fit\">\n            Browse files\n          </Button>\n        </FileUploadTrigger>\n      </FileUploadDropzone>\n      <FileUploadList>\n        {files.map((file) => (\n          <FileUploadItem key={file.name} value={file}>\n            <FileUploadItemPreview />\n            <FileUploadItemMetadata />\n            <FileUploadItemDelete asChild>\n              <Button variant=\"ghost\" size=\"icon\" className=\"size-7\">\n                <X />\n              </Button>\n            </FileUploadItemDelete>\n          </FileUploadItem>\n        ))}\n      </FileUploadList>\n    </FileUpload>\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}