{
  "name": "checkbox-group",
  "type": "registry:ui",
  "dependencies": [
    "@diceui/checkbox-group"
  ],
  "files": [
    {
      "path": "ui/checkbox-group.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport * as CheckboxGroupPrimitive from \"@diceui/checkbox-group\";\nimport { Check } from \"lucide-react\";\nimport * as React from \"react\";\n\nconst CheckboxGroup = React.forwardRef<\n  React.ComponentRef<typeof CheckboxGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxGroupPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxGroupPrimitive.Root\n    data-slot=\"checkbox-group\"\n    ref={ref}\n    className={cn(\"peer flex flex-col gap-3.5\", className)}\n    {...props}\n  />\n));\nCheckboxGroup.displayName = CheckboxGroupPrimitive.Root.displayName;\n\nconst CheckboxGroupLabel = React.forwardRef<\n  React.ComponentRef<typeof CheckboxGroupPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof CheckboxGroupPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <CheckboxGroupPrimitive.Label\n    data-slot=\"checkbox-group-label\"\n    ref={ref}\n    className={cn(\n      \"text-foreground/70 text-sm leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n      className,\n    )}\n    {...props}\n  />\n));\nCheckboxGroupLabel.displayName = CheckboxGroupPrimitive.Label.displayName;\n\nconst CheckboxGroupList = React.forwardRef<\n  React.ComponentRef<typeof CheckboxGroupPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CheckboxGroupPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CheckboxGroupPrimitive.List\n    data-slot=\"checkbox-group-list\"\n    ref={ref}\n    className={cn(\n      \"flex gap-3 data-[orientation=horizontal]:flex-row data-[orientation=vertical]:flex-col\",\n      className,\n    )}\n    {...props}\n  />\n));\nCheckboxGroupList.displayName = CheckboxGroupPrimitive.List.displayName;\n\nconst CheckboxGroupItem = React.forwardRef<\n  React.ComponentRef<typeof CheckboxGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CheckboxGroupPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <label className=\"flex w-fit select-none items-center gap-2 text-sm leading-none has-data-disabled:cursor-not-allowed has-data-invalid:text-destructive has-data-disabled:opacity-50\">\n    <CheckboxGroupPrimitive.Item\n      data-slot=\"checkbox-group-item\"\n      ref={ref}\n      className={cn(\n        \"h-4 w-4 shrink-0 rounded-sm border border-primary shadow-sm focus-visible:outline-hidden focus-visible:ring-1 focus-visible:ring-ring data-invalid:border-destructive [&[data-state=checked]:not([data-invalid])]:bg-primary [&[data-state=checked]:not([data-invalid])]:text-primary-foreground [&[data-state=checked][data-invalid]]:bg-destructive [&[data-state=checked][data-invalid]]:text-primary-foreground [&[data-state=unchecked][data-invalid]]:bg-transparent\",\n        className,\n      )}\n      {...props}\n    >\n      <CheckboxGroupPrimitive.Indicator\n        className=\"flex h-4 w-4 items-center justify-center text-current\"\n        asChild\n      >\n        <Check />\n      </CheckboxGroupPrimitive.Indicator>\n    </CheckboxGroupPrimitive.Item>\n    {children}\n  </label>\n));\nCheckboxGroupItem.displayName = CheckboxGroupPrimitive.Item.displayName;\n\nconst CheckboxGroupDescription = React.forwardRef<\n  React.ComponentRef<typeof CheckboxGroupPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof CheckboxGroupPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <CheckboxGroupPrimitive.Description\n    data-slot=\"checkbox-group-description\"\n    ref={ref}\n    className={cn(\n      \"text-[0.8rem] text-muted-foreground leading-none data-invalid:text-destructive\",\n      className,\n    )}\n    {...props}\n  />\n));\nCheckboxGroupDescription.displayName =\n  CheckboxGroupPrimitive.Description.displayName;\n\nconst CheckboxGroupMessage = React.forwardRef<\n  React.ComponentRef<typeof CheckboxGroupPrimitive.Message>,\n  React.ComponentPropsWithoutRef<typeof CheckboxGroupPrimitive.Message>\n>(({ className, ...props }, ref) => (\n  <CheckboxGroupPrimitive.Message\n    data-slot=\"checkbox-group-message\"\n    ref={ref}\n    className={cn(\n      \"text-[0.8rem] text-muted-foreground leading-none data-invalid:text-destructive\",\n      className,\n    )}\n    {...props}\n  />\n));\nCheckboxGroupMessage.displayName = CheckboxGroupPrimitive.Message.displayName;\n\nexport {\n  CheckboxGroup,\n  CheckboxGroupLabel,\n  CheckboxGroupList,\n  CheckboxGroupItem,\n  CheckboxGroupDescription,\n  CheckboxGroupMessage,\n};\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}