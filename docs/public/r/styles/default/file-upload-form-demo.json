{
  "name": "file-upload-form-demo",
  "type": "registry:example",
  "dependencies": [
    "@radix-ui/react-slot",
    "lucide-react",
    "@hookform/resolvers/zod",
    "zod"
  ],
  "registryDependencies": [
    "button",
    "form",
    "lucide-react",
    "sonner"
  ],
  "files": [
    {
      "path": "examples/file-upload-form-demo.tsx",
      "content": "\"use client\";\r\n\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { CloudUpload, X } from \"lucide-react\";\r\nimport * as React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as z from \"zod\";\r\n\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormDescription,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/components/ui/form\";\r\nimport {\r\n  FileUpload,\r\n  FileUploadDropzone,\r\n  FileUploadItem,\r\n  FileUploadItemDelete,\r\n  FileUploadItemMetadata,\r\n  FileUploadItemPreview,\r\n  FileUploadList,\r\n  FileUploadTrigger,\r\n} from \"@/registry/default/ui/file-upload\";\r\nimport { toast } from \"sonner\";\r\n\r\nconst formSchema = z.object({\r\n  files: z\r\n    .array(z.custom<File>())\r\n    .min(1, \"Please select at least one file\")\r\n    .max(2, \"Please select up to 2 files\")\r\n    .refine((files) => files.every((file) => file.size <= 5 * 1024 * 1024), {\r\n      message: \"File size must be less than 5MB\",\r\n      path: [\"files\"],\r\n    }),\r\n});\r\n\r\ntype FormValues = z.infer<typeof formSchema>;\r\n\r\nexport default function FileUploadFormDemo() {\r\n  const form = useForm<FormValues>({\r\n    resolver: zodResolver(formSchema),\r\n    defaultValues: {\r\n      files: [],\r\n    },\r\n  });\r\n\r\n  const onSubmit = React.useCallback((data: FormValues) => {\r\n    toast(\"Submitted values:\", {\r\n      description: (\r\n        <pre className=\"mt-2 w-80 rounded-md bg-accent/30 p-4 text-accent-foreground\">\r\n          <code>\r\n            {JSON.stringify(\r\n              data.files.map((file) =>\r\n                file.name.length > 25\r\n                  ? `${file.name.slice(0, 25)}...`\r\n                  : file.name,\r\n              ),\r\n              null,\r\n              2,\r\n            )}\r\n          </code>\r\n        </pre>\r\n      ),\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"w-full max-w-md\">\r\n        <FormField\r\n          control={form.control}\r\n          name=\"files\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Attachments</FormLabel>\r\n              <FormControl>\r\n                <FileUpload\r\n                  value={field.value}\r\n                  onValueChange={field.onChange}\r\n                  accept=\"image/*\"\r\n                  maxFiles={2}\r\n                  maxSize={5 * 1024 * 1024}\r\n                  onFileReject={(_, message) => {\r\n                    form.setError(\"files\", {\r\n                      message,\r\n                    });\r\n                  }}\r\n                  multiple\r\n                >\r\n                  <FileUploadDropzone className=\"flex-row flex-wrap border-dotted text-center\">\r\n                    <CloudUpload className=\"size-4\" />\r\n                    Drag and drop or\r\n                    <FileUploadTrigger asChild>\r\n                      <Button variant=\"link\" size=\"sm\" className=\"p-0\">\r\n                        choose files\r\n                      </Button>\r\n                    </FileUploadTrigger>\r\n                    to upload\r\n                  </FileUploadDropzone>\r\n                  <FileUploadList>\r\n                    {field.value.map((file, index) => (\r\n                      <FileUploadItem key={index} value={file}>\r\n                        <FileUploadItemPreview />\r\n                        <FileUploadItemMetadata />\r\n                        <FileUploadItemDelete asChild>\r\n                          <Button\r\n                            variant=\"ghost\"\r\n                            size=\"icon\"\r\n                            className=\"size-7\"\r\n                          >\r\n                            <X />\r\n                            <span className=\"sr-only\">Delete</span>\r\n                          </Button>\r\n                        </FileUploadItemDelete>\r\n                      </FileUploadItem>\r\n                    ))}\r\n                  </FileUploadList>\r\n                </FileUpload>\r\n              </FormControl>\r\n              <FormDescription>\r\n                Upload up to 2 images up to 5MB each.\r\n              </FormDescription>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        <Button type=\"submit\" className=\"mt-4\">\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </Form>\r\n  );\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}