{
  "name": "mention",
  "type": "registry:ui",
  "dependencies": [
    "@diceui/mention",
    "lucide-react"
  ],
  "files": [
    {
      "path": "ui/mention.tsx",
      "content": "import * as MentionPrimitive from \"@diceui/mention\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Mention = React.forwardRef<\n  React.ElementRef<typeof MentionPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MentionPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MentionPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"**:data-tag:rounded **:data-tag:bg-blue-200 **:data-tag:py-px **:data-tag:text-blue-950 dark:**:data-tag:bg-blue-800 dark:**:data-tag:text-blue-50\",\n      className,\n    )}\n    {...props}\n  />\n));\nMention.displayName = MentionPrimitive.Root.displayName;\n\nconst MentionLabel = React.forwardRef<\n  React.ElementRef<typeof MentionPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MentionPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <MentionPrimitive.Label\n    ref={ref}\n    className={cn(\"px-0.5 py-1.5 font-semibold text-sm\", className)}\n    {...props}\n  />\n));\nMentionLabel.displayName = MentionPrimitive.Label.displayName;\n\nconst MentionInput = React.forwardRef<\n  React.ElementRef<typeof MentionPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof MentionPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <MentionPrimitive.Input\n    ref={ref}\n    className={cn(\n      \"flex w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-xs placeholder:text-muted-foreground focus-visible:outline-hidden focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n      className,\n    )}\n    {...props}\n  />\n));\nMentionInput.displayName = MentionPrimitive.Input.displayName;\n\nconst MentionContent = React.forwardRef<\n  React.ElementRef<typeof MentionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MentionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <MentionPrimitive.Portal>\n    <MentionPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=closed]:animate-out data-[state=open]:animate-in\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n    </MentionPrimitive.Content>\n  </MentionPrimitive.Portal>\n));\nMentionContent.displayName = MentionPrimitive.Content.displayName;\n\nconst MentionItem = React.forwardRef<\n  React.ElementRef<typeof MentionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MentionPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <MentionPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden data-disabled:pointer-events-none data-highlighted:bg-accent data-highlighted:text-accent-foreground data-disabled:opacity-50\",\n      className,\n    )}\n    {...props}\n  >\n    {children}\n  </MentionPrimitive.Item>\n));\nMentionItem.displayName = MentionPrimitive.Item.displayName;\n\nexport { Mention, MentionContent, MentionInput, MentionItem, MentionLabel };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}