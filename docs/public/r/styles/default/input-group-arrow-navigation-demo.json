{
  "name": "input-group-arrow-navigation-demo",
  "type": "registry:example",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority"
  ],
  "registryDependencies": [
    "input-group",
    "badge",
    "switch",
    "label"
  ],
  "files": [
    {
      "path": "examples/input-group-arrow-navigation-demo.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Label } from \"@/components/ui/label\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { InputGroup, InputGroupItem } from \"@/registry/default/ui/input-group\";\n\nexport default function InputGroupArrowNavigationDemo() {\n  const [values, setValues] = React.useState({\n    red: \"255\",\n    green: \"128\",\n    blue: \"64\",\n  });\n\n  const [arrowNavigation, setArrowNavigation] = React.useState(true);\n  const [loop, setLoop] = React.useState(false);\n\n  const onValueChange = React.useCallback(\n    (field: keyof typeof values) =>\n      (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        if (value === \"\" || (Number(value) >= 0 && Number(value) <= 255)) {\n          setValues((prev) => ({\n            ...prev,\n            [field]: value,\n          }));\n        }\n      },\n    [],\n  );\n\n  const hexColor = React.useMemo(() => {\n    const r = parseInt(values.red || \"0\", 10);\n    const g = parseInt(values.green || \"0\", 10);\n    const b = parseInt(values.blue || \"0\", 10);\n    return `#${r.toString(16).padStart(2, \"0\")}${g.toString(16).padStart(2, \"0\")}${b.toString(16).padStart(2, \"0\")}`;\n  }, [values]);\n\n  return (\n    <div className=\"flex flex-col gap-6\">\n      <div className=\"flex flex-col gap-4 rounded-lg border p-4\">\n        <h3 className=\"font-medium text-sm\">Navigation Options</h3>\n\n        <div className=\"flex items-center space-x-2\">\n          <Switch\n            id=\"arrow-navigation\"\n            checked={arrowNavigation}\n            onCheckedChange={setArrowNavigation}\n          />\n          <Label htmlFor=\"arrow-navigation\">Enable arrow navigation</Label>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <Switch\n            id=\"loop\"\n            checked={loop}\n            onCheckedChange={setLoop}\n            disabled={!arrowNavigation}\n          />\n          <Label\n            htmlFor=\"loop\"\n            className={!arrowNavigation ? \"opacity-50\" : \"\"}\n          >\n            Enable looping\n          </Label>\n        </div>\n\n        {arrowNavigation && (\n          <p className=\"text-muted-foreground text-xs\">\n            Try navigating with arrow keys when cursor is at the start/end of\n            text\n          </p>\n        )}\n      </div>\n      <div className=\"flex items-center gap-3\">\n        <div\n          className=\"h-12 w-12 rounded border-2 border-border\"\n          style={{ backgroundColor: hexColor }}\n        />\n        <div className=\"flex flex-col gap-1\">\n          <Badge variant=\"secondary\" className=\"font-mono text-xs\">\n            {hexColor.toUpperCase()}\n          </Badge>\n          <span className=\"text-muted-foreground text-xs\">\n            RGB({values.red}, {values.green}, {values.blue})\n          </span>\n        </div>\n      </div>\n\n      <div className=\"flex flex-col gap-2\">\n        <label className=\"font-medium text-sm leading-none\">\n          RGB Color Values\n        </label>\n        <InputGroup\n          className=\"w-full max-w-sm\"\n          arrowNavigation={arrowNavigation}\n          loop={loop}\n        >\n          <InputGroupItem\n            position=\"first\"\n            placeholder=\"R\"\n            value={values.red}\n            onChange={onValueChange(\"red\")}\n            aria-label=\"Red value (0-255)\"\n            type=\"number\"\n            min=\"0\"\n            max=\"255\"\n          />\n          <InputGroupItem\n            position=\"middle\"\n            placeholder=\"G\"\n            value={values.green}\n            onChange={onValueChange(\"green\")}\n            aria-label=\"Green value (0-255)\"\n            type=\"number\"\n            min=\"0\"\n            max=\"255\"\n          />\n          <InputGroupItem\n            position=\"last\"\n            placeholder=\"B\"\n            value={values.blue}\n            onChange={onValueChange(\"blue\")}\n            aria-label=\"Blue value (0-255)\"\n            type=\"number\"\n            min=\"0\"\n            max=\"255\"\n          />\n        </InputGroup>\n        <p className=\"mt-2 text-muted-foreground text-xs\">\n          {arrowNavigation\n            ? \"Use Tab/Shift+Tab for standard navigation, or arrow keys when cursor is at text boundaries\"\n            : \"Use Tab/Shift+Tab to navigate between inputs\"}\n        </p>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}