{
  "name": "hitbox",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "ui/hitbox.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport type * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst hitboxVariants = cva(\"relative after:absolute after:content-['']\", {\n  variants: {\n    size: {\n      sm: \"after:-inset-1\",\n      default: \"after:-inset-2\",\n      lg: \"after:-inset-3\",\n    },\n    debug: {\n      true: \"after:border after:border-red-500 after:border-dashed after:bg-red-500/20\",\n      false: \"\",\n    },\n  },\n  defaultVariants: {\n    size: \"default\",\n    debug: false,\n  },\n});\n\ninterface HitboxProps\n  extends React.ComponentProps<typeof Slot>,\n    VariantProps<typeof hitboxVariants> {}\n\nfunction Hitbox(props: HitboxProps) {\n  const { className, size, debug = false, ...hitboxProps } = props;\n\n  return (\n    <Slot\n      data-slot=\"hitbox\"\n      {...hitboxProps}\n      className={cn(\n        hitboxVariants({\n          size,\n          debug,\n          className,\n        }),\n      )}\n    />\n  );\n}\n\nexport { Hitbox };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}