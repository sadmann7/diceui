{
  "name": "hitbox",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "ui/hitbox.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst hitboxVariants = cva(\n  [\n    \"relative after:absolute after:content-['']\",\n    \"[--size-default:0.5rem] [--size-lg:0.75rem] [--size-sm:0.25rem]\",\n  ],\n  {\n    variants: {\n      size: {\n        default: \"[--size:var(--size-default)]\",\n        sm: \"[--size:var(--size-sm)]\",\n        lg: \"[--size:var(--size-lg)]\",\n      },\n      position: {\n        default: \"after:[inset:calc(-1*var(--size))]\",\n        top: \"after:[height:var(--size)] after:[left:0] after:[right:0] after:[top:calc(-1*var(--size))]\",\n        bottom:\n          \"after:[bottom:calc(-1*var(--size))] after:[height:var(--size)] after:[left:0] after:[right:0]\",\n        left: \"after:[bottom:0] after:[left:calc(-1*var(--size))] after:[top:0] after:[width:var(--size)]\",\n        right:\n          \"after:[bottom:0] after:[right:calc(-1*var(--size))] after:[top:0] after:[width:var(--size)]\",\n        vertical:\n          \"after:[bottom:calc(-1*var(--size))] after:[left:0] after:[right:0] after:[top:calc(-1*var(--size))]\",\n        horizontal:\n          \"after:[bottom:0] after:[left:calc(-1*var(--size))] after:[right:calc(-1*var(--size))] after:[top:0]\",\n      },\n      shape: {\n        default: \"\",\n        circular: \"after:rounded-full\",\n        rounded: \"after:rounded-md\",\n      },\n      debug: {\n        true: \"after:border after:border-red-500 after:border-dashed after:bg-red-500/20\",\n        false: \"\",\n      },\n    },\n    defaultVariants: {\n      size: \"default\",\n      position: \"default\",\n      shape: \"default\",\n      debug: false,\n    },\n  },\n);\n\ninterface HitboxProps\n  extends React.ComponentProps<typeof Slot>,\n    VariantProps<typeof hitboxVariants> {\n  inset?: string;\n}\n\nfunction Hitbox(props: HitboxProps) {\n  const {\n    className,\n    size,\n    position,\n    shape,\n    debug = false,\n    inset,\n    style: styleProp,\n    ...hitboxProps\n  } = props;\n\n  const style = React.useMemo(() => {\n    if (!inset) return styleProp;\n\n    return {\n      ...styleProp,\n      \"--inset\": inset,\n    } as React.CSSProperties;\n  }, [inset, styleProp]);\n\n  return (\n    <Slot\n      data-slot=\"hitbox\"\n      style={style}\n      {...hitboxProps}\n      className={cn(\n        hitboxVariants({\n          size: inset ? undefined : size,\n          position,\n          shape,\n          debug,\n        }),\n        inset && \"after:[inset:var(--inset)]\",\n        className,\n      )}\n    />\n  );\n}\n\nexport { Hitbox };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}