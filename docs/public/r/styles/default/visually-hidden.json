{
  "name": "visually-hidden",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "components/visually-hidden.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\";\nimport * as React from \"react\";\n\ninterface VisuallyHiddenProps extends React.ComponentPropsWithoutRef<\"div\"> {\n  asChild?: boolean;\n}\n\nconst VisuallyHidden = React.forwardRef<HTMLDivElement, VisuallyHiddenProps>(\n  ({ asChild, style, ...props }, forwardedRef) => {\n    const Comp = asChild ? Slot : \"div\";\n\n    return (\n      <Comp\n        {...props}\n        ref={forwardedRef}\n        style={{\n          border: 0,\n          clip: \"rect(0 0 0 0)\",\n          clipPath: \"inset(50%)\",\n          height: \"1px\",\n          margin: \"-1px\",\n          overflow: \"hidden\",\n          padding: 0,\n          position: \"absolute\",\n          whiteSpace: \"nowrap\",\n          width: \"1px\",\n          ...style,\n        }}\n      />\n    );\n  },\n);\n\nVisuallyHidden.displayName = \"VisuallyHidden\";\n\nexport { VisuallyHidden };\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}