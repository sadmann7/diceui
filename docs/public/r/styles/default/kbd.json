{
  "name": "kbd",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/kbd.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport type * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nconst kbdVariants = cva(\n  \"inline-flex w-fit items-center gap-1 font-medium font-mono text-[10px] text-foreground/70 sm:text-[11px]\",\n  {\n    variants: {\n      size: {\n        default: \"h-6 rounded px-1.5\",\n        sm: \"h-5 rounded-sm px-1\",\n        lg: \"h-7 rounded-md px-2\",\n      },\n      variant: {\n        default: \"bg-accent\",\n        outline:\n          \"bg-background px-0 [&_[data-slot='kbd-key']]:min-w-[20px] [&_[data-slot='kbd-key']]:border [&_[data-slot='kbd-key']]:border-border [&_[data-slot='kbd-key']]:bg-muted/30 [&_[data-slot='kbd-key']]:px-1.5 [&_[data-slot='kbd-key']]:shadow-xs\",\n        ghost: \"bg-transparent shadow-none\",\n      },\n    },\n    defaultVariants: {\n      size: \"default\",\n      variant: \"default\",\n    },\n  },\n);\n\ninterface KbdRootProps\n  extends React.ComponentProps<\"kbd\">,\n    VariantProps<typeof kbdVariants> {\n  asChild?: boolean;\n}\n\nfunction KbdRoot({\n  variant = \"default\",\n  size = \"default\",\n  asChild,\n  className,\n  ...rootProps\n}: KbdRootProps) {\n  const RootPrimitive = asChild ? Slot : \"kbd\";\n\n  return (\n    <RootPrimitive\n      role=\"group\"\n      data-slot=\"kbd\"\n      {...rootProps}\n      className={cn(kbdVariants({ size, variant, className }))}\n    />\n  );\n}\n\nconst KEY_DESCRIPTIONS: Record<string, string> = {\n  \"⌘\": \"Command\",\n  \"⇧\": \"Shift\",\n  \"⌥\": \"Option\",\n  \"⌃\": \"Control\",\n  Ctrl: \"Control\",\n  \"⌫\": \"Backspace\",\n  \"⎋\": \"Escape\",\n  \"↩\": \"Return\",\n  \"⇥\": \"Tab\",\n  \"⌤\": \"Enter\",\n  \"↑\": \"Arrow Up\",\n  \"↓\": \"Arrow Down\",\n  \"←\": \"Arrow Left\",\n  \"→\": \"Arrow Right\",\n  \"⇪\": \"Caps Lock\",\n  fn: \"Function\",\n  \"⌦\": \"Delete\",\n  \"⇞\": \"Page Up\",\n  \"⇟\": \"Page Down\",\n  \"↖\": \"Home\",\n  \"↘\": \"End\",\n  \"↕\": \"Page Up/Down\",\n  \"↔\": \"Left/Right\",\n} as const;\n\ninterface KbdKeyProps extends React.ComponentProps<\"span\"> {\n  asChild?: boolean;\n}\n\nfunction KbdKey({\n  asChild,\n  className,\n  children,\n  title: titleProp,\n  ...keyProps\n}: KbdKeyProps) {\n  const keyText = children?.toString() ?? \"\";\n  const title = titleProp ?? KEY_DESCRIPTIONS[keyText] ?? keyText;\n\n  const KeyPrimitive = asChild ? Slot : \"span\";\n\n  return (\n    <abbr title={title} className=\"no-underline\">\n      <KeyPrimitive\n        data-slot=\"kbd-key\"\n        {...keyProps}\n        className={cn(\n          \"inline-flex items-center justify-center rounded\",\n          className,\n        )}\n      >\n        {children}\n      </KeyPrimitive>\n    </abbr>\n  );\n}\n\ninterface KbdSeparatorProps extends React.ComponentProps<\"span\"> {\n  asChild?: boolean;\n}\n\nfunction KbdSeparator({\n  asChild,\n  children = \"+\",\n  className,\n  ...separatorProps\n}: KbdSeparatorProps) {\n  const SeparatorPrimitive = asChild ? Slot : \"span\";\n\n  return (\n    <SeparatorPrimitive\n      role=\"separator\"\n      aria-orientation=\"horizontal\"\n      aria-hidden=\"true\"\n      data-slot=\"kbd-separator\"\n      {...separatorProps}\n      className={cn(\"text-foreground/70\", className)}\n    >\n      {children}\n    </SeparatorPrimitive>\n  );\n}\n\nconst Kbd = KbdRoot;\nconst Root = KbdRoot;\nconst Key = KbdKey;\nconst Separator = KbdSeparator;\n\nexport {\n  Kbd,\n  KbdKey,\n  KbdSeparator,\n  //\n  Root,\n  Key,\n  Separator,\n};\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}