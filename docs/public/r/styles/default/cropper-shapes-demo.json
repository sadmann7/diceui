{
  "name": "cropper-shapes-demo",
  "type": "registry:example",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority"
  ],
  "registryDependencies": [
    "label",
    "select",
    "switch"
  ],
  "files": [
    {
      "path": "examples/cropper-shapes-demo.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport {\n  Cropper,\n  CropperArea,\n  CropperContent,\n  CropperImage,\n  type CropperPoint,\n} from \"@/registry/default/ui/cropper\";\n\nconst shapes = [\n  { label: \"Rectangular\", value: \"rectangular\" },\n  { label: \"Circular\", value: \"circular\" },\n] as const;\n\nconst objectFits = [\n  { label: \"Contain\", value: \"contain\" },\n  { label: \"Cover\", value: \"cover\" },\n  { label: \"Horizontal Cover\", value: \"horizontal-cover\" },\n  { label: \"Vertical Cover\", value: \"vertical-cover\" },\n] as const;\n\nexport default function CropperShapesDemo() {\n  const [crop, setCrop] = React.useState<CropperPoint>({ x: 0, y: 0 });\n  const [zoom, setZoom] = React.useState(1);\n  const [shape, setShape] = React.useState<\"rectangular\" | \"circular\">(\n    \"rectangular\",\n  );\n  const [objectFit, setObjectFit] = React.useState<\n    \"contain\" | \"cover\" | \"horizontal-cover\" | \"vertical-cover\"\n  >(\"contain\");\n  const [withGrid, setWithGrid] = React.useState(false);\n  const [allowOverflow, setAllowOverflow] = React.useState(false);\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n        <div className=\"flex items-center gap-2\">\n          <Label htmlFor=\"shape\">Shape:</Label>\n          <Select\n            value={shape}\n            onValueChange={(value) =>\n              setShape(value as \"rectangular\" | \"circular\")\n            }\n          >\n            <SelectTrigger id=\"shape\" className=\"w-32\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              {shapes.map((s) => (\n                <SelectItem key={s.value} value={s.value}>\n                  {s.label}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div className=\"flex items-center gap-2\">\n          <Label htmlFor=\"object-fit\">Object Fit:</Label>\n          <Select\n            value={objectFit}\n            onValueChange={(value) =>\n              setObjectFit(\n                value as\n                  | \"contain\"\n                  | \"cover\"\n                  | \"horizontal-cover\"\n                  | \"vertical-cover\",\n              )\n            }\n          >\n            <SelectTrigger id=\"object-fit\" className=\"w-36\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              {objectFits.map((fit) => (\n                <SelectItem key={fit.value} value={fit.value}>\n                  {fit.label}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div className=\"flex items-center gap-2\">\n          <Switch id=\"grid\" checked={withGrid} onCheckedChange={setWithGrid} />\n          <Label htmlFor=\"grid\">Show Grid</Label>\n        </div>\n\n        <div className=\"flex items-center gap-2\">\n          <Switch\n            id=\"overflow\"\n            checked={allowOverflow}\n            onCheckedChange={setAllowOverflow}\n          />\n          <Label htmlFor=\"overflow\">Allow Overflow</Label>\n        </div>\n      </div>\n\n      <Cropper\n        aspectRatio={1}\n        crop={crop}\n        zoom={zoom}\n        shape={shape}\n        objectFit={objectFit}\n        withGrid={withGrid}\n        allowOverflow={allowOverflow}\n        onCropChange={setCrop}\n        onZoomChange={setZoom}\n        className=\"min-h-80 max-w-lg\"\n      >\n        <CropperContent>\n          <CropperImage\n            src=\"https://images.unsplash.com/photo-1441974231531-c6227db76b6e?w=1920&h=1080&fit=crop&auto=format&fm=webp&q=80\"\n            alt=\"Forest landscape\"\n            crossOrigin=\"anonymous\"\n          />\n          <CropperArea />\n        </CropperContent>\n      </Cropper>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}