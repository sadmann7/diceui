{
  "name": "data-grid-demo",
  "type": "registry:example",
  "dependencies": [
    "@tanstack/react-table",
    "@tanstack/react-virtual",
    "lucide-react",
    "sonner"
  ],
  "registryDependencies": [
    "data-grid"
  ],
  "files": [
    {
      "path": "examples/data-grid-demo.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { DataGrid } from \"@/components/data-grid/data-grid\";\nimport { useDataGrid } from \"@/hooks/use-data-grid\";\n\ninterface Person {\n  id: string;\n  name: string;\n  email: string;\n  age: number;\n  status: \"active\" | \"inactive\";\n  salary: number;\n  department: string;\n  startDate: string;\n  isManager: boolean;\n}\n\nconst initialData: Person[] = [\n  {\n    id: \"1\",\n    name: \"John Doe\",\n    email: \"john@example.com\",\n    age: 30,\n    status: \"active\",\n    salary: 75000,\n    department: \"Engineering\",\n    startDate: \"2022-01-15\",\n    isManager: false,\n  },\n  {\n    id: \"2\",\n    name: \"Jane Smith\",\n    email: \"jane@example.com\",\n    age: 28,\n    status: \"active\",\n    salary: 82000,\n    department: \"Design\",\n    startDate: \"2021-06-10\",\n    isManager: true,\n  },\n  {\n    id: \"3\",\n    name: \"Bob Johnson\",\n    email: \"bob@example.com\",\n    age: 35,\n    status: \"inactive\",\n    salary: 68000,\n    department: \"Marketing\",\n    startDate: \"2020-03-22\",\n    isManager: false,\n  },\n  {\n    id: \"4\",\n    name: \"Alice Brown\",\n    email: \"alice@example.com\",\n    age: 32,\n    status: \"active\",\n    salary: 90000,\n    department: \"Engineering\",\n    startDate: \"2019-11-08\",\n    isManager: true,\n  },\n  {\n    id: \"5\",\n    name: \"Charlie Wilson\",\n    email: \"charlie@example.com\",\n    age: 26,\n    status: \"active\",\n    salary: 65000,\n    department: \"Sales\",\n    startDate: \"2023-02-14\",\n    isManager: false,\n  },\n];\n\nexport default function DataGridDemo() {\n  const [data, setData] = React.useState<Person[]>(initialData);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        id: \"name\",\n        accessorKey: \"name\",\n        header: \"Name\",\n        meta: {\n          label: \"Name\",\n          cell: {\n            variant: \"short-text\" as const,\n          },\n        },\n        size: 150,\n      },\n      {\n        id: \"email\",\n        accessorKey: \"email\",\n        header: \"Email\",\n        meta: {\n          label: \"Email\",\n          cell: {\n            variant: \"short-text\" as const,\n          },\n        },\n        size: 200,\n      },\n      {\n        id: \"age\",\n        accessorKey: \"age\",\n        header: \"Age\",\n        meta: {\n          label: \"Age\",\n          cell: {\n            variant: \"number\" as const,\n            min: 18,\n            max: 100,\n          },\n        },\n        size: 80,\n      },\n      {\n        id: \"status\",\n        accessorKey: \"status\",\n        header: \"Status\",\n        meta: {\n          label: \"Status\",\n          cell: {\n            variant: \"select\" as const,\n            options: [\n              { label: \"Active\", value: \"active\" },\n              { label: \"Inactive\", value: \"inactive\" },\n            ],\n          },\n        },\n        size: 120,\n      },\n      {\n        id: \"salary\",\n        accessorKey: \"salary\",\n        header: \"Salary\",\n        meta: {\n          label: \"Salary\",\n          cell: {\n            variant: \"number\" as const,\n            min: 0,\n            step: 1000,\n          },\n        },\n        size: 120,\n      },\n      {\n        id: \"department\",\n        accessorKey: \"department\",\n        header: \"Department\",\n        meta: {\n          label: \"Department\",\n          cell: {\n            variant: \"select\" as const,\n            options: [\n              { label: \"Engineering\", value: \"Engineering\" },\n              { label: \"Design\", value: \"Design\" },\n              { label: \"Marketing\", value: \"Marketing\" },\n              { label: \"Sales\", value: \"Sales\" },\n              { label: \"HR\", value: \"HR\" },\n            ],\n          },\n        },\n        size: 140,\n      },\n      {\n        id: \"startDate\",\n        accessorKey: \"startDate\",\n        header: \"Start Date\",\n        meta: {\n          label: \"Start Date\",\n          cell: {\n            variant: \"date\" as const,\n          },\n        },\n        size: 130,\n      },\n      {\n        id: \"isManager\",\n        accessorKey: \"isManager\",\n        header: \"Manager\",\n        meta: {\n          label: \"Is Manager\",\n          cell: {\n            variant: \"checkbox\" as const,\n          },\n        },\n        size: 100,\n      },\n    ],\n    [],\n  );\n\n  const onDataChange = React.useCallback((newData: Person[]) => {\n    setData(newData);\n  }, []);\n\n  const onRowAdd = React.useCallback(() => {\n    const newRow: Person = {\n      id: `${Date.now()}`,\n      name: \"\",\n      email: \"\",\n      age: 25,\n      status: \"active\",\n      salary: 50000,\n      department: \"Engineering\",\n      startDate: new Date().toISOString().split(\"T\")[0] ?? \"\",\n      isManager: false,\n    };\n    setData((prev) => [...prev, newRow]);\n    return { rowIndex: data.length, columnId: \"name\" };\n  }, [data.length]);\n\n  const { table, ...gridProps } = useDataGrid({\n    data,\n    columns,\n    onDataChange,\n    initialState: {\n      sorting: [{ id: \"name\", desc: false }],\n    },\n  });\n\n  return (\n    <DataGrid {...gridProps} table={table} height={540} onRowAdd={onRowAdd} />\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}