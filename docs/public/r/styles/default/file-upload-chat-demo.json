{
  "name": "file-upload-chat-demo",
  "type": "registry:example",
  "dependencies": [
    "@radix-ui/react-slot",
    "lucide-react",
    "sonner",
    "uploadthing",
    "@uploadthing/react"
  ],
  "registryDependencies": [
    "button",
    "textarea",
    "file-upload",
    "lucide-react",
    "sonner"
  ],
  "files": [
    {
      "path": "examples/file-upload-chat-demo.tsx",
      "content": "\"use client\";\r\n\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { uploadFiles } from \"@/lib/uploadthing\"; // Assuming this path is correct\r\nimport {\r\n  FileUpload,\r\n  FileUploadDropzone,\r\n  FileUploadItem,\r\n  FileUploadItemDelete,\r\n  FileUploadItemMetadata,\r\n  FileUploadItemPreview,\r\n  FileUploadItemProgress,\r\n  FileUploadList,\r\n  FileUploadTrigger,\r\n} from \"@/registry/default/ui/file-upload\";\r\nimport { ArrowUp, Paperclip, Upload, X } from \"lucide-react\";\r\nimport * as React from \"react\";\r\nimport { toast } from \"sonner\";\r\nimport { UploadThingError } from \"uploadthing/server\";\r\n\r\nexport default function FileUploadChatDemo() {\r\n  const [input, setInput] = React.useState(\"\");\r\n  const [files, setFiles] = React.useState<File[]>([]);\r\n  const [isUploading, setIsUploading] = React.useState(false);\r\n\r\n  const onInputChange = React.useCallback(\r\n    (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n      setInput(event.target.value);\r\n    },\r\n    [],\r\n  );\r\n\r\n  const onUpload = React.useCallback(\r\n    async (\r\n      files: File[],\r\n      {\r\n        onProgress,\r\n      }: {\r\n        onProgress: (file: File, progress: number) => void;\r\n      },\r\n    ) => {\r\n      try {\r\n        setIsUploading(true);\r\n        const res = await uploadFiles(\"imageUploader\", {\r\n          files,\r\n          onUploadProgress: ({ file, progress }) => {\r\n            onProgress(file, progress);\r\n          },\r\n        });\r\n\r\n        toast.success(\"Uploaded files:\", {\r\n          description: (\r\n            <pre className=\"mt-2 w-80 rounded-md bg-accent/30 p-4 text-accent-foreground\">\r\n              <code>\r\n                {JSON.stringify(\r\n                  res.map((file) =>\r\n                    file.name.length > 25\r\n                      ? `${file.name.slice(0, 25)}...`\r\n                      : file.name,\r\n                  ),\r\n                  null,\r\n                  2,\r\n                )}\r\n              </code>\r\n            </pre>\r\n          ),\r\n        });\r\n      } catch (error) {\r\n        setIsUploading(false);\r\n\r\n        if (error instanceof UploadThingError) {\r\n          const errorMessage =\r\n            error.data && \"error\" in error.data\r\n              ? error.data.error\r\n              : \"Upload failed\";\r\n          toast.error(errorMessage);\r\n          return;\r\n        }\r\n\r\n        toast.error(\r\n          error instanceof Error ? error.message : \"An unknown error occurred\",\r\n        );\r\n      } finally {\r\n        setIsUploading(false);\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const onFileReject = React.useCallback((file: File, message: string) => {\r\n    toast(message, {\r\n      description: `\"${file.name.length > 20 ? `${file.name.slice(0, 20)}...` : file.name}\" has been rejected`,\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = React.useCallback(\r\n    (event: React.FormEvent<HTMLFormElement>) => {\r\n      event.preventDefault();\r\n      setInput(\"\");\r\n      setFiles([]);\r\n    },\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <FileUpload\r\n      value={files}\r\n      onValueChange={setFiles}\r\n      onUpload={onUpload}\r\n      onFileReject={onFileReject}\r\n      maxFiles={10}\r\n      maxSize={5 * 1024 * 1024}\r\n      className=\"relative h-80 w-full max-w-md\"\r\n      disabled={isUploading}\r\n      multiple\r\n    >\r\n      <FileUploadDropzone\r\n        tabIndex={-1}\r\n        // Prevents the dropzone from triggering on click\r\n        onClick={(event) => event.preventDefault()}\r\n        className=\"absolute top-0 left-0 z-0 size-full origin-center scale-95 border-none bg-background/50 opacity-0 backdrop-blur transition-all duration-200 ease-out data-[dragging]:z-10 data-[dragging]:scale-100 data-[dragging]:opacity-100\"\r\n      >\r\n        <div className=\"flex flex-col items-center gap-1 text-center\">\r\n          <div className=\"flex items-center justify-center rounded-full border p-2.5\">\r\n            <Upload className=\"size-6 text-muted-foreground\" />\r\n          </div>\r\n          <p className=\"font-medium text-sm\">Drag & drop files here</p>\r\n          <p className=\"text-muted-foreground text-xs\">\r\n            Upload max 5 files each up to 5MB\r\n          </p>\r\n        </div>\r\n      </FileUploadDropzone>\r\n      <form\r\n        onSubmit={onSubmit}\r\n        className=\"relative flex w-full flex-col gap-2.5 rounded-md border border-input px-3 py-2 outline-none focus-within:ring-1 focus-within:ring-ring/50\"\r\n      >\r\n        <FileUploadList\r\n          orientation=\"horizontal\"\r\n          className=\"overflow-x-auto px-0 py-1\"\r\n        >\r\n          {files.map((file, index) => (\r\n            <FileUploadItem key={index} value={file} className=\"max-w-52 p-1.5\">\r\n              <FileUploadItemPreview className=\"size-8 [&>svg]:size-5\">\r\n                <FileUploadItemProgress variant=\"fill\" />\r\n              </FileUploadItemPreview>\r\n              <FileUploadItemMetadata size=\"sm\" />\r\n              <FileUploadItemDelete asChild>\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  size=\"icon\"\r\n                  className=\"-top-1 -right-1 absolute size-4 shrink-0 cursor-pointer rounded-full\"\r\n                  disabled={isUploading}\r\n                >\r\n                  <X className=\"size-2.5\" />\r\n                </Button>\r\n              </FileUploadItemDelete>\r\n            </FileUploadItem>\r\n          ))}\r\n        </FileUploadList>\r\n        <Textarea\r\n          value={input}\r\n          onChange={onInputChange}\r\n          placeholder=\"Type your message here...\"\r\n          className=\"w-full resize-none border-0 bg-transparent p-0 shadow-none focus-visible:ring-0 dark:bg-transparent\"\r\n          disabled={isUploading}\r\n        />\r\n        <div className=\"absolute right-[8px] bottom-[7px] flex items-center gap-1.5\">\r\n          <FileUploadTrigger asChild>\r\n            <Button\r\n              type=\"button\"\r\n              size=\"icon\"\r\n              variant=\"ghost\"\r\n              className=\"size-7 rounded-sm\"\r\n              disabled={isUploading}\r\n            >\r\n              <Paperclip className=\"size-3.5\" />\r\n              <span className=\"sr-only\">Attach file</span>\r\n            </Button>\r\n          </FileUploadTrigger>\r\n          <Button\r\n            size=\"icon\"\r\n            className=\"size-7 rounded-sm\"\r\n            disabled={!input.trim() || isUploading}\r\n          >\r\n            <ArrowUp className=\"size-3.5\" />\r\n            <span className=\"sr-only\">Send message</span>\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </FileUpload>\r\n  );\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}